name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # shortcut for common versions 
        compiler: [clang, gcc]
        compiler-version: ["7", "8", "9", "10", "11"]
        ubuntu_base: ["focal"]
        # include extra clang versions
        include:
          - compiler: clang
            compiler-version: "12"
            ubuntu_base: "focal"
          - compiler: clang
            compiler-version: "13"
            ubuntu_base: "focal"
          - compiler: clang
            compiler-version: "14"
            ubuntu_base: "focal"
          - compiler: clang
            compiler-version: "14"
            ubuntu_base: "jammy"
          - compiler: clang
            compiler-version: "15"
            ubuntu_base: "jammy"
          - compiler: gcc
            compiler-version: "11"
            ubuntu_base: "jammy"
          - compiler: gcc
            compiler-version: "12"
            ubuntu_base: "jammy"

    steps:
      - uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUBUSERNAME }}
          password: ${{ secrets.DOCKERHUBPASSWORD }}
          logout: true

      - name: Set output variables
        id: vars
        run: |
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT 
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT 

      - name: Check output variables
        run: |
          echo ${{ steps.vars.outputs.tag }}
          echo ${{ steps.vars.outputs.sha_short }}

      - name: build branch without pushing
        # Push to arbitrary feature branch will not push the image
        if: github.event.action != 'published' && github.ref != 'refs/heads/master'
        run : |
          python rebuild_and_upload.py --base ${{ matrix.ubuntu_base }} --${{ matrix.compiler }} ${{ matrix.compiler-version }} --tag ${{ steps.vars.outputs.sha_short }} --build_number $GITHUB_RUN_NUMBER --test
      - name: build main and push to dockerhub
        # Push to master will push the image to master
        if: github.event.action != 'published' && github.ref == 'refs/heads/master'
        run : |
          python rebuild_and_upload.py --base ${{ matrix.ubuntu_base }} --${{ matrix.compiler }} ${{ matrix.compiler-version }} --tag latest --build_number $GITHUB_RUN_NUMBER --test --upload